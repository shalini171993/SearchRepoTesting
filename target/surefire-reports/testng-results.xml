<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="13" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="SearchRepositoryAPITestSuite" duration-ms="5138" started-at="2024-01-05T03:37:03 GMT" finished-at="2024-01-05T03:37:08 GMT">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="SearchRepositoryAPITests" duration-ms="5138" started-at="2024-01-05T03:37:03 GMT" finished-at="2024-01-05T03:37:08 GMT">
      <class name="runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunner@6043cd28]" name="setUpClass" is-config="true" duration-ms="451" started-at="2024-01-05T03:37:03 GMT" finished-at="2024-01-05T03:37:04 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3824" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with queries and sort"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3829" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with queries and sort"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3732" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3733" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3871" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3730" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3733" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3846" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with queries and sort"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3730" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="3733" started-at="2024-01-05T03:37:04 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:07 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo with different query parameters"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="324" started-at="2024-01-05T03:37:07 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:08 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo that doesnt exist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [403]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [403]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at steps.searchSteps.verify_empty_list_for_nonexistent_repo(searchSteps.java:71)
at ✽.The Search Repository API returns response with empty search item(file:///C:/Users/Shalini/IdeaProjects/SearchRepo/src/test/resources/features/search.feature:62)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="756" started-at="2024-01-05T03:37:07 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:08 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Repository API validation error"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <exception class="com.github.tomakehurst.wiremock.common.FatalStartupException">
            <message>
              <![CDATA[java.lang.RuntimeException: java.io.IOException: Failed to bind to /0.0.0.0:8080]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.github.tomakehurst.wiremock.common.FatalStartupException: java.lang.RuntimeException: java.io.IOException: Failed to bind to /0.0.0.0:8080
at com.github.tomakehurst.wiremock.WireMockServer.start(WireMockServer.java:149)
at steps.searchSteps.the_mock_server_is_set_up_to_return_validation_error_for_an_invalid_query(searchSteps.java:33)
at ✽.the mock server is set up to return validation error for an invalid query(file:///C:/Users/Shalini/IdeaProjects/SearchRepo/src/test/resources/features/search.feature:69)
Caused by: java.lang.RuntimeException: java.io.IOException: Failed to bind to /0.0.0.0:8080
at com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.start(JettyHttpServer.java:192)
at com.github.tomakehurst.wiremock.WireMockServer.start(WireMockServer.java:147)
at steps.searchSteps.the_mock_server_is_set_up_to_return_validation_error_for_an_invalid_query(searchSteps.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)
at io.cucumber.core.runner.TestStep.run(TestStep.java:64)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:104)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:73)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:117)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:114)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: Failed to bind to /0.0.0.0:8080
at org.eclipse.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:349)
at org.eclipse.jetty.server.ServerConnector.open(ServerConnector.java:310)
at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:234)
at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:72)
at org.eclipse.jetty.server.Server.doStart(Server.java:386)
at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:72)
at com.github.tomakehurst.wiremock.jetty9.JettyHttpServer.start(JettyHttpServer.java:190)
... 37 more
Caused by: java.net.BindException: Address already in use: bind
at sun.nio.ch.Net.bind0(Native Method)
at sun.nio.ch.Net.bind(Net.java:444)
at sun.nio.ch.Net.bind(Net.java:436)
at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:225)
at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
at org.eclipse.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:345)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- com.github.tomakehurst.wiremock.common.FatalStartupException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.TestRunner@6043cd28]" name="runScenario" duration-ms="256" started-at="2024-01-05T03:37:07 GMT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-01-05T03:37:08 GMT">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search repo that doesnt exist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [403]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [403]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at steps.searchSteps.verify_empty_list_for_nonexistent_repo(searchSteps.java:71)
at ✽.The Search Repository API returns response with empty search item(file:///C:/Users/Shalini/IdeaProjects/SearchRepo/src/test/resources/features/search.feature:62)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunner@6043cd28]" name="tearDownClass" is-config="true" duration-ms="158" started-at="2024-01-05T03:37:08 GMT" finished-at="2024-01-05T03:37:08 GMT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunner -->
    </test> <!-- SearchRepositoryAPITests -->
  </suite> <!-- SearchRepositoryAPITestSuite -->
</testng-results>
